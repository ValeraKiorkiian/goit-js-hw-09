{"version":3,"file":"2-form.js","sources":["../src/js/2-form.js"],"sourcesContent":["// Оголоси поза будь-якими функціями об’єкт formData з полями email та message, які спочатку мають\n// порожні рядки як значення: { email: \"\", message: \"\" }.\n// Використовуй метод делегування для відстеження змін у формі через подію input. Зберігай актуальні\n// дані з полів email та message у formData та записуй цей об’єкт у локальне сховище. Використовуй ключ\n// \"feedback-form-state\" для зберігання даних у сховищі.\n// При завантаженні сторінки перевір, чи є дані у локальному сховищі. Якщо так, використовуй їх для заповнення\n// форми та об'єкта formData. Якщо ні, залиш поля форми порожніми.\n// Перед відправленням форми переконайся, що обидва поля форми заповнені. Якщо будь-яке з полів (властивостей об’єкта formData)\n// порожнє, показуй сповіщення з текстом «Fill please all fields». Якщо всі поля заповнені, виведи у консоль об’єкт formData з\n// актуальними значеннями, очисти локальне сховище, об’єкт formData і поля форми.\n\nconst formData = {\n  email: '',\n  message: '',\n};\n\nconst form = document.querySelector(`.feedback-form`);\nform.addEventListener(`input`, onInputEvt);\nform.addEventListener(`submit`, onSubEvt);\nconst LOCAL_KEY = 'feedback-form-state';\n\nfunction onInputEvt(event) {\n  formData[event.target.name] = event.target.value.trim();\n  const localData = localStorage.setItem(LOCAL_KEY, JSON.stringify(formData));\n  console.log(localData);\n}\n\nfunction getData() {\n  const saveData = localStorage.getItem(LOCAL_KEY);\n  if (saveData) {\n    const parsedData = JSON.parse(saveData);\n    form.email.value = parsedData.email || ``;\n    form.message.value = parsedData.message || ``;\n    formData.email = parsedData.email || ``;\n    formData.message = parsedData.message || ``;\n  }\n}\ngetData();\n\nfunction onSubEvt(event) {\n  event.preventDefault();\n  if (!formData.email || !formData.message) {\n    alert(`Fill please all fields`);\n    return;\n  }\n\n  console.log(formData);\n  localStorage.removeItem(LOCAL_KEY);\n  formData.email = ``;\n  formData.message = ``;\n  form.reset();\n}\n"],"names":["formData","form","onInputEvt","onSubEvt","LOCAL_KEY","event","localData","getData","saveData","parsedData"],"mappings":"wFAWA,MAAMA,EAAW,CACf,MAAO,GACP,QAAS,EACX,EAEMC,EAAO,SAAS,cAAc,gBAAgB,EACpDA,EAAK,iBAAiB,QAASC,CAAU,EACzCD,EAAK,iBAAiB,SAAUE,CAAQ,EACxC,MAAMC,EAAY,sBAElB,SAASF,EAAWG,EAAO,CACzBL,EAASK,EAAM,OAAO,IAAI,EAAIA,EAAM,OAAO,MAAM,KAAM,EACvD,MAAMC,EAAY,aAAa,QAAQF,EAAW,KAAK,UAAUJ,CAAQ,CAAC,EAC1E,QAAQ,IAAIM,CAAS,CACvB,CAEA,SAASC,GAAU,CACjB,MAAMC,EAAW,aAAa,QAAQJ,CAAS,EAC/C,GAAII,EAAU,CACZ,MAAMC,EAAa,KAAK,MAAMD,CAAQ,EACtCP,EAAK,MAAM,MAAQQ,EAAW,OAAS,GACvCR,EAAK,QAAQ,MAAQQ,EAAW,SAAW,GAC3CT,EAAS,MAAQS,EAAW,OAAS,GACrCT,EAAS,QAAUS,EAAW,SAAW,EAC7C,CACA,CACAF,EAAS,EAET,SAASJ,EAASE,EAAO,CAEvB,GADAA,EAAM,eAAgB,EAClB,CAACL,EAAS,OAAS,CAACA,EAAS,QAAS,CACxC,MAAM,wBAAwB,EAC9B,MACJ,CAEE,QAAQ,IAAIA,CAAQ,EACpB,aAAa,WAAWI,CAAS,EACjCJ,EAAS,MAAQ,GACjBA,EAAS,QAAU,GACnBC,EAAK,MAAO,CACd"}